;;; The portion of planet-coa-action that renames terms from higher ontologies

(defconcept task-action    
    :is |MilitaryEvent|
    )

(defrelation who
  :domain task-action
  :range military-unit)

(defrelation where
  :domain task-action
  :range |GeographicalRegion|)

;;; Might specialise this to begin and end for actions. Will certainly
;;; use a more expressive representation for tasks (COA objectives).
(defrelation when
  :domain task-action 
  :range time-specifier)
;;; The "what" that usually accompanies these relations is encoded in
;;; the action type. In addition to the relations above, a TASK has a
;;; set of relations that together define the "what": in-order-to,
;;; type-of-operation and to.

;;; ======================
;;; task actions

(defconcept fix 
  :is-primitive (:and task-action |Fix-MilitaryTask|
		  ;; can simultaneously fix more than one object in
		  ;; the same task
		  (:all action-obj military-unit)))

(defconcept delay 
  :is-primitive (:and task-action |Delay-MilitaryTask|
		  ;; can simultaneously fix more than one object in
		  ;; the same task
		  (:all action-obj military-unit)))

(defconcept seize
  :is-primitive (:and task-action |Seize-MilitaryTask|
		  (:all action-obj |GeographicalRegion|)))

(defconcept hastyDefense
  :is-primitive (:and task-action
		  (:all action-obj |GeographicalRegion|)))

(defconcept penetrate
  :is-primitive (:and task-action |Penetrate-MilitaryTask|
		  (:all action-obj military-unit)))


;;; Different uses of the verb can be defined as subconcepts.
;;; The roles used in these subconcepts match the grammar.

(defconcept forward-passage-of-lines
    :is-primitive (:and task-action |ForwardPassageOfLines-MilitaryTask|
			(:at-least 1 through)))


(defconcept follow 
    :is-primitive  (:and task-action 
			 |FollowAndSupport-MilitaryTask|))

(defconcept contain
    :is-primitive  (:and task-action
			 |Contain-MilitaryTask|))

(defconcept screen
    :is-primitive  (:and task-action 
			 |Screen-MilitaryTask|))

(defconcept attrit
    :is-primitive  (:and task-action
			 |Attrit-MilitaryTask|))

(defconcept interdict
    :is-primitive  (:and task-action
			 |Interdict-MilitaryTask|))

(defconcept protect
    :is-primitive  task-action)

(defconcept gaining-access
    :is-primitive  task-action)


(defconcept block-action ;;  seems that concept 'block' is already defined.
    :is-primitive (:and task-action 
			|Block-MilitaryTask|))

