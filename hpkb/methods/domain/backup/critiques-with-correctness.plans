(in-package "EVALUATION")
(use-package '("EXPECT" "PLANET"))
(loom::use-loom "EVALUATION" :dont-create-context-p t)

(tellm (thing all-forces-arrayed))  ;; needs to be changed

(setf *top-level-goal*
   '(
     evaluate (obj (inst-of coa))
	       (with-respect-to all-forces-arrayed))
		   
    )



(setq *exe-top-level-goal* 
    '(evaluate (obj |BlueBrigadeCOA2-4Mt|)
	       (with-respect-to all-forces-arrayed))
    )


(def-expect-action 'check-not-arrayed)

(def-expect-action 'check-if-simple)

(defplan check-all-forces-arrayed
  :capability (evaluate (obj (?c is (inst-of coa)))
		    (with-respect-to (inst all-forces-arrayed)))
  :result-type (inst-of boolean)
  :method (not (determine-whether-there-are-any
		(obj (filter (obj (sub-unit (|WHO| (coa-operation ?c))))
			     (with (check-not-arrayed 
				    (obj (sub-unit (|WHO| (coa-operation ?c))))
				    (of (coa-operation ?c))))))))
  )

(defplan check-unit-not-arrayed
    :capability (check-not-arrayed (obj (?u is (inst-of military-unit)))
				   (of (?o is (inst-of |MilitaryOperation|))))
    :result-type (inst-of boolean)
    :method (if (and (there-is-not-any (obj (assigned-action ?u)))
		     (check-not-arrayed (obj ?u)
					(in (spec-of |RESERVE-COA|))
					(of ?o))
		     (check-not-arrayed (obj ?u)
					(in (spec-of |SECURITY-COA|))
					(of ?o))
		     (check-not-arrayed (obj ?u)
					(in (spec-of |REAR-COA|))
					(of ?o)))
	      then true
	      else false))

(defplan check-unit-is-not-reserve-unit-in-mission
    :capability (check-not-arrayed (obj (?u is (inst-of military-unit)))
				   (in (?r is (spec-of |RESERVE-COA|)))
				   (of (?o is (inst-of |MilitaryOperation|))))
    :result-type (inst-of boolean)
    :method (determine-whether
	     (obj ?u)
	     (is-a (spec-of set-member))
	     (of (|reserveUnitInMission| ?o)))
    )

(defplan check-unit-is-not-security-unit-in-mission
    :capability (check-not-arrayed (obj (?u is (inst-of military-unit)))
				   (in (?r is (spec-of |SECURITY-COA|)))
				   (of (?o is (inst-of |MilitaryOperation|))))
    :result-type (inst-of boolean)
    :method (determine-whether
	     (obj ?u)
	     (is-a (spec-of set-member))
	     (of (|securityUnitInMission| ?o)))
    )
  
(defplan check-unit-is-not-unit-operating-in-rear
    :capability (check-not-arrayed (obj (?u is (inst-of military-unit)))
				   (in (?r is (spec-of |REAR-COA|)))
				   (of (?o is (inst-of |MilitaryOperation|))))
    :result-type (inst-of boolean)
    :method (determine-whether
	     (obj ?u)
	     (is-a (spec-of set-member))
	     (of (|unitOperatingInRear| ?o)))
    )
  
