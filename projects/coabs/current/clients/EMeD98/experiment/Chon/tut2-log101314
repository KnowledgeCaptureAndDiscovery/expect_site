check: Method Capability Hierarchy
   at Thu Jun 10 10:13:44 PDT 1999

check: Method Sub-Method Relation
   at Thu Jun 10 10:13:47 PDT 1999

select: add new button
   at Thu Jun 10 10:14:26 PDT 1999

select: copy and create button
   at Thu Jun 10 10:14:44 PDT 1999

 done editing:((name estimate-emplacement-time)
 (capability (estimate
                (obj (?t is (spec-of time)))
                (for (?s is (inst-of emplace-avlb)))
                ))
 (result-type (inst-of number))
 (method (find
	  (obj (spec-of maximum))
	  (of (bridge-of ?s)))
	 )
)

   at Thu Jun 10 10:18:15 PDT 1999

built new method:((name estimate-emplacement-time)
 (capability (estimate
                (obj (?t is (spec-of time)))
                (for (?s is (inst-of emplace-avlb)))
                ))
 (result-type (inst-of number))
 (method (find
	  (obj (spec-of maximum))
	  (of (bridge-of ?s)))
	 )
)

   at Thu Jun 10 10:18:15 PDT 1999

check: All Agenda
   at Thu Jun 10 10:18:15 PDT 1999

check: Method Sub-Method Relation
   at Thu Jun 10 10:18:15 PDT 1999

check: Method Capability Hierarchy
   at Thu Jun 10 10:18:19 PDT 1999

check: Method Sub-Method Relation
   at Thu Jun 10 10:18:21 PDT 1999

select: copy and create button
   at Thu Jun 10 10:18:40 PDT 1999

 done editing:((name find-emplacement-time)
 (capability (find
                (obj (?l is (spec-of time)))
                (of (?f is (inst-of avlb)))
                ))
 (result-type (inst-of number))
 (method (if (is-less-or-equal
	      (obj (emplacement-time ?f))
	      (than 0.5))
	     then 0.5
	     else (emplacement-time ?f)))
)
   at Thu Jun 10 10:21:50 PDT 1999

built new method:((name find-emplacement-time)
 (capability (find
                (obj (?l is (spec-of time)))
                (of (?f is (inst-of avlb)))
                ))
 (result-type (inst-of number))
 (method (if (is-less-or-equal
	      (obj (emplacement-time ?f))
	      (than 0.5))
	     then 0.5
	     else (emplacement-time ?f)))
)
   at Thu Jun 10 10:21:50 PDT 1999

check: All Agenda
   at Thu Jun 10 10:21:50 PDT 1999

check: Method Sub-Method Relation
   at Thu Jun 10 10:21:50 PDT 1999

check: Method Capability Hierarchy
   at Thu Jun 10 10:21:58 PDT 1999

select: modify button
   at Thu Jun 10 10:24:37 PDT 1999

 done editing:((name estimate-emplacement-time)
 (capability (estimate
                (obj (?t is (spec-of time)))
                (for (?s is (inst-of emplace-avlb)))
                ))
 (result-type (inst-of number))
 (method (find
	  (obj (spec-of maximum))
	  (of (find 
	       (obj (spec-of time))
	       (of (bridge-of ?s))))
	 ))
)

   at Thu Jun 10 10:25:59 PDT 1999

modified method:((name estimate-emplacement-time)
 (capability (estimate
                (obj (?t is (spec-of time)))
                (for (?s is (inst-of emplace-avlb)))
                ))
 (result-type (inst-of number))
 (method (find
	  (obj (spec-of maximum))
	  (of (find 
	       (obj (spec-of time))
	       (of (bridge-of ?s))))
	 ))
)

   at Thu Jun 10 10:25:59 PDT 1999

check: All Agenda
   at Thu Jun 10 10:25:59 PDT 1999

check: Method Sub-Method Relation
   at Thu Jun 10 10:25:59 PDT 1999

check: Method Capability Hierarchy
   at Thu Jun 10 10:26:05 PDT 1999

check: Method Sub-Method Relation
   at Thu Jun 10 10:26:13 PDT 1999

 select: get ps tree success
   at Thu Jun 10 10:26:15 PDT 1999

 [ps-en1] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF WORKAROUND-PLAN)))
[ps-en1] < (INST-OF NUMBER)
   -[ps-an2: METHOD] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF WORKAROUND-PLAN)))
    [ps-an2: METHOD] < (INST-OF NUMBER)
    [ps-en3] > (ADD (OBJ (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (WORKAROUND-OF (INST-OF WORKAROUND-PLAN))))))
    [ps-en3]   (ADD (OBJ (SET-OF (INST-OF NUMBER))))
    [ps-en3] < (INST-OF NUMBER)
     [ps-en4] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (WORKAROUND-OF (INST-OF WORKAROUND-PLAN))))
     [ps-en4]   (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (SET-OF (INST-OF WORKAROUND-STEP))))
     [ps-en4] < (SET-OF (INST-OF NUMBER))
      [ps-en5] > (WORKAROUND-OF (INST-OF WORKAROUND-PLAN))
      [ps-en5] < (SET-OF (INST-OF WORKAROUND-STEP))
       -[ps-an6: RETRIEVE-R] > (WORKAROUND-OF (INST-OF WORKAROUND-PLAN))
        [ps-an6: RETRIEVE-R] < (SET-OF (INST-OF WORKAROUND-STEP))
      -[ps-an8: SET] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (SET-OF (INST-OF WORKAROUND-STEP))))
       [ps-an8: SET]   (APPEND (SET-OF (INST-OF NUMBER)))
       [ps-an8: SET] < (SET-OF (INST-OF NUMBER))
       [ps-en9] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF WORKAROUND-STEP)))
       [ps-en9] < (SET-OF (INST-OF NUMBER))
        -[ps-an12: COVERING] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF WORKAROUND-STEP)))
         [ps-an12: COVERING]   (APPEND (INST-OF NUMBER) (INST-OF NUMBER))
         [ps-an12: COVERING] < (SET-OF (INST-OF NUMBER))
         [ps-en13] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF EMPLACE-AVLB)))
         [ps-en13] < (INST-OF NUMBER)
          -[ps-an15: METHOD] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF EMPLACE-AVLB)))
           [ps-an15: METHOD] < (INST-OF NUMBER)
           [ps-en16] > (FIND (OBJ (SPEC-OF MAXIMUM)) (OF (FIND (OBJ (SPEC-OF TIME)) (OF (BRIDGE-OF (INST-OF EMPLACE-AVLB))))))
           [ps-en16]   (FIND (OBJ (SPEC-OF MAXIMUM)) (OF (SET-OF (INST-OF NUMBER))))
           [ps-en16] < (INST-OF NUMBER)
            [ps-en17] > (FIND (OBJ (SPEC-OF TIME)) (OF (BRIDGE-OF (INST-OF EMPLACE-AVLB))))
            [ps-en17]   (FIND (OBJ (SPEC-OF TIME)) (OF (SET-OF (INST-OF AVLB))))
            [ps-en17] < (SET-OF (INST-OF NUMBER))
             [ps-en18] > (BRIDGE-OF (INST-OF EMPLACE-AVLB))
             [ps-en18] < (SET-OF (INST-OF AVLB))
              -[ps-an19: RETRIEVE-R] > (BRIDGE-OF (INST-OF EMPLACE-AVLB))
               [ps-an19: RETRIEVE-R] < (SET-OF (INST-OF AVLB))
             -[ps-an21: SET] > (FIND (OBJ (SPEC-OF TIME)) (OF (SET-OF (INST-OF AVLB))))
              [ps-an21: SET]   (APPEND (INST-OF NUMBER))
              [ps-an21: SET] < (SET-OF (INST-OF NUMBER))
              [ps-en22] > (FIND (OBJ (SPEC-OF TIME)) (OF (INST-OF AVLB)))
              [ps-en22] < (INST-OF NUMBER)
               -[ps-an23: METHOD] > (FIND (OBJ (SPEC-OF TIME)) (OF (INST-OF AVLB)))
                [ps-an23: METHOD] < (INST-OF NUMBER)
                [ps-en24] > (IF (IS-LESS-OR-EQUAL (OBJ (EMPLACEMENT-TIME (INST-OF AVLB))) (THAN 0.5)) THEN 0.5 ELSE (EMPLACEMENT-TIME (INST-OF AVLB)))
                [ps-en24]   (IF (INST-OF BOOLEAN) THEN 0.5 ELSE (INST-OF NUMBER))
                [ps-en24] < (INST-OF NUMBER)
                 [ps-en25] > (EMPLACEMENT-TIME (INST-OF AVLB))
                 [ps-en25] < (INST-OF NUMBER)
                  -[ps-an27: RETRIEVE-R] > (EMPLACEMENT-TIME (INST-OF AVLB))
                   [ps-an27: RETRIEVE-R] < (INST-OF NUMBER)
                 [ps-en26] > (IS-LESS-OR-EQUAL (OBJ (EMPLACEMENT-TIME (INST-OF AVLB))) (THAN 0.5))
                 [ps-en26]   (IS-LESS-OR-EQUAL (OBJ (INST-OF NUMBER)) (THAN 0.5))
                 [ps-en26] < (INST-OF BOOLEAN)
                  [ps-en25] > (EMPLACEMENT-TIME (INST-OF AVLB))
                  [ps-en25] < (INST-OF NUMBER)
                   -[ps-an27: RETRIEVE-R] > (EMPLACEMENT-TIME (INST-OF AVLB))
                    [ps-an27: RETRIEVE-R] < (INST-OF NUMBER)
                  -[ps-an28: METHOD] > (IS-LESS-OR-EQUAL (OBJ (INST-OF NUMBER)) (THAN 0.5))
                   [ps-an28: METHOD] < (INST-OF BOOLEAN)
            -[ps-an29: METHOD] > (FIND (OBJ (SPEC-OF MAXIMUM)) (OF (SET-OF (INST-OF NUMBER))))
             [ps-an29: METHOD] < (INST-OF NUMBER)
         [ps-en14] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF TANK-PLOW-MINEFIELD)))
         [ps-en14] < (INST-OF NUMBER)
          -[ps-an30: METHOD] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF TANK-PLOW-MINEFIELD)))
           [ps-an30: METHOD] < (INST-OF NUMBER)
           [ps-en31] > (MULTIPLY (OBJ (FIND (OBJ (SPEC-OF LENGTH)) (OF (MINEFIELD-OF (INST-OF TANK-PLOW-MINEFIELD))))) (BY 25/3))
           [ps-en31]   (MULTIPLY (OBJ (INST-OF NUMBER)) (BY 25/3))
           [ps-en31] < (INST-OF NUMBER)
            [ps-en32] > (FIND (OBJ (SPEC-OF LENGTH)) (OF (MINEFIELD-OF (INST-OF TANK-PLOW-MINEFIELD))))
            [ps-en32]   (FIND (OBJ (SPEC-OF LENGTH)) (OF (INST-OF MINEFIELD)))
            [ps-en32] < (INST-OF NUMBER)
             [ps-en33] > (MINEFIELD-OF (INST-OF TANK-PLOW-MINEFIELD))
             [ps-en33] < (INST-OF MINEFIELD)
              -[ps-an34: RETRIEVE-R] > (MINEFIELD-OF (INST-OF TANK-PLOW-MINEFIELD))
               [ps-an34: RETRIEVE-R] < (INST-OF MINEFIELD)
             -[ps-an35: METHOD] > (FIND (OBJ (SPEC-OF LENGTH)) (OF (INST-OF MINEFIELD)))
              [ps-an35: METHOD] < (INST-OF NUMBER)
              [ps-en36] > (LENGTH-OF (INST-OF MINEFIELD))
              [ps-en36] < (INST-OF NUMBER)
               -[ps-an37: RETRIEVE-R] > (LENGTH-OF (INST-OF MINEFIELD))
                [ps-an37: RETRIEVE-R] < (INST-OF NUMBER)
            -[ps-an38: METHOD] > (MULTIPLY (OBJ (INST-OF NUMBER)) (BY 25/3))
             [ps-an38: METHOD] < (INST-OF NUMBER)
     -[ps-an39: METHOD] > (ADD (OBJ (SET-OF (INST-OF NUMBER))))
      [ps-an39: METHOD] < (INST-OF NUMBER)

   at Thu Jun 10 10:26:15 PDT 1999

 select: get ps tree pretty
   at Thu Jun 10 10:26:32 PDT 1999

 Node ps-en1: (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF WORKAROUND-PLAN)))
Node ps-en1 result: (INST-OF NUMBER)
   Node ps-en3: (ADD (OBJ (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (WORKAROUND-OF (INST-OF WORKAROUND-PLAN))))))
   Node ps-en3 expands to: (ADD (OBJ (SET-OF (INST-OF NUMBER))))
   Node ps-en3 result: (INST-OF NUMBER)
    Node ps-en4: (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (WORKAROUND-OF (INST-OF WORKAROUND-PLAN))))
    Node ps-en4 expands to: (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (SET-OF (INST-OF WORKAROUND-STEP))))
    Node ps-en4 result: (SET-OF (INST-OF NUMBER))
     Node ps-en5: retrieve (WORKAROUND-OF (INST-OF WORKAROUND-PLAN))
     Node ps-en5 result: (SET-OF (INST-OF WORKAROUND-STEP))
     Node ps-en9: (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF WORKAROUND-STEP)))
     Node ps-en9 result: (SET-OF (INST-OF NUMBER))
      Node ps-en13: (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF EMPLACE-AVLB)))
      Node ps-en13 result: (INST-OF NUMBER)
       Node ps-en16: (FIND (OBJ (SPEC-OF MAXIMUM)) (OF (FIND (OBJ (SPEC-OF TIME)) (OF (BRIDGE-OF (INST-OF EMPLACE-AVLB))))))
       Node ps-en16 expands to: (FIND (OBJ (SPEC-OF MAXIMUM)) (OF (SET-OF (INST-OF NUMBER))))
       Node ps-en16 result: (INST-OF NUMBER)
        Node ps-en17: (FIND (OBJ (SPEC-OF TIME)) (OF (BRIDGE-OF (INST-OF EMPLACE-AVLB))))
        Node ps-en17 expands to: (FIND (OBJ (SPEC-OF TIME)) (OF (SET-OF (INST-OF AVLB))))
        Node ps-en17 result: (SET-OF (INST-OF NUMBER))
         Node ps-en18: retrieve (BRIDGE-OF (INST-OF EMPLACE-AVLB))
         Node ps-en18 result: (SET-OF (INST-OF AVLB))
         Node ps-en22: (FIND (OBJ (SPEC-OF TIME)) (OF (INST-OF AVLB)))
         Node ps-en22 result: (INST-OF NUMBER)
          Node ps-en24: (IF (IS-LESS-OR-EQUAL (OBJ (EMPLACEMENT-TIME (INST-OF AVLB))) (THAN 0.5)) THEN 0.5 ELSE (EMPLACEMENT-TIME (INST-OF AVLB)))
          Node ps-en24 expands to: (IF (INST-OF BOOLEAN) THEN 0.5 ELSE (INST-OF NUMBER))
          Node ps-en24 result: (INST-OF NUMBER)
           Node ps-en25: retrieve (EMPLACEMENT-TIME (INST-OF AVLB))
           Node ps-en25 result: (INST-OF NUMBER)
           Node ps-en26: (IS-LESS-OR-EQUAL (OBJ (EMPLACEMENT-TIME (INST-OF AVLB))) (THAN 0.5))
           Node ps-en26 expands to: (IS-LESS-OR-EQUAL (OBJ (INST-OF NUMBER)) (THAN 0.5))
           Node ps-en26 result: (INST-OF BOOLEAN)
            Node ps-en25: retrieve (EMPLACEMENT-TIME (INST-OF AVLB))
            Node ps-en25 result: (INST-OF NUMBER)
      Node ps-en14: (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF TANK-PLOW-MINEFIELD)))
      Node ps-en14 result: (INST-OF NUMBER)
       Node ps-en31: (MULTIPLY (OBJ (FIND (OBJ (SPEC-OF LENGTH)) (OF (MINEFIELD-OF (INST-OF TANK-PLOW-MINEFIELD))))) (BY 25/3))
       Node ps-en31 expands to: (MULTIPLY (OBJ (INST-OF NUMBER)) (BY 25/3))
       Node ps-en31 result: (INST-OF NUMBER)
        Node ps-en32: (FIND (OBJ (SPEC-OF LENGTH)) (OF (MINEFIELD-OF (INST-OF TANK-PLOW-MINEFIELD))))
        Node ps-en32 expands to: (FIND (OBJ (SPEC-OF LENGTH)) (OF (INST-OF MINEFIELD)))
        Node ps-en32 result: (INST-OF NUMBER)
         Node ps-en33: retrieve (MINEFIELD-OF (INST-OF TANK-PLOW-MINEFIELD))
         Node ps-en33 result: (INST-OF MINEFIELD)
         Node ps-en36: retrieve (LENGTH-OF (INST-OF MINEFIELD))
         Node ps-en36 result: (INST-OF NUMBER)

   at Thu Jun 10 10:26:33 PDT 1999

 select: get ps tree pretty NL
   at Thu Jun 10 10:26:37 PDT 1999

 Node ps-en1:  estimate the time  for the workaround plan
Node ps-en1 result: (INST-OF NUMBER)
   Node ps-en3:  add estimate the time  for the workaround of of
   Node ps-en3 expands to:  add the numbers
   Node ps-en3 result: (INST-OF NUMBER)
    Node ps-en4:  estimate the time  for the workaround of of
    Node ps-en4 expands to:  estimate the time  for the workaround steps
    Node ps-en4 result: (SET-OF (INST-OF NUMBER))
     Node ps-en5:  retrieve the workaround of of
     Node ps-en5 result: (SET-OF (INST-OF WORKAROUND-STEP))
     Node ps-en9:  estimate the time  for the workaround step
     Node ps-en9 result: (SET-OF (INST-OF NUMBER))
      Node ps-en13:  estimate the time  for the emplace avlb
      Node ps-en13 result: (INST-OF NUMBER)
       Node ps-en16:  find the maximum  of find the time  of the bridge of of
       Node ps-en16 expands to:  find the maximum  of the numbers
       Node ps-en16 result: (INST-OF NUMBER)
        Node ps-en17:  find the time  of the bridge of of
        Node ps-en17 expands to:  find the time  of the avlbs
        Node ps-en17 result: (SET-OF (INST-OF NUMBER))
         Node ps-en18:  retrieve the bridge of of
         Node ps-en18 result: (SET-OF (INST-OF AVLB))
         Node ps-en22:  find the time  of the avlb
         Node ps-en22 result: (INST-OF NUMBER)
          Node ps-en24:  if is less or equal the emplacement time of  than 0.5 then 0.5 else the emplacement time of
          Node ps-en24 expands to:  if then 0.5 else
          Node ps-en24 result: (INST-OF NUMBER)
           Node ps-en25:  retrieve the emplacement time of
           Node ps-en25 result: (INST-OF NUMBER)
           Node ps-en26:  is less or equal the emplacement time of  than 0.5
           Node ps-en26 expands to:  is less or equal the number  than 0.5
           Node ps-en26 result: (INST-OF BOOLEAN)
            Node ps-en25:  retrieve the emplacement time of
            Node ps-en25 result: (INST-OF NUMBER)
      Node ps-en14:  estimate the time  for the tank plow minefield
      Node ps-en14 result: (INST-OF NUMBER)
       Node ps-en31:  multiply find the length  of the minefield of of  by 25/3
       Node ps-en31 expands to:  multiply the number  by 25/3
       Node ps-en31 result: (INST-OF NUMBER)
        Node ps-en32:  find the length  of the minefield of of
        Node ps-en32 expands to:  find the length  of the minefield
        Node ps-en32 result: (INST-OF NUMBER)
         Node ps-en33:  retrieve the minefield of of
         Node ps-en33 result: (INST-OF MINEFIELD)
         Node ps-en36:  retrieve the length of of
         Node ps-en36 result: (INST-OF NUMBER)

   at Thu Jun 10 10:26:37 PDT 1999

 select: get ps tree all
   at Thu Jun 10 10:26:46 PDT 1999

 [ps-en1] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF WORKAROUND-PLAN)))
[ps-en1] < (INST-OF NUMBER)
   -[ps-an2: METHOD] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF WORKAROUND-PLAN)))
    [ps-an2: METHOD] < (INST-OF NUMBER)
    [ps-en3] > (ADD (OBJ (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (WORKAROUND-OF (INST-OF WORKAROUND-PLAN))))))
    [ps-en3]   (ADD (OBJ (SET-OF (INST-OF NUMBER))))
    [ps-en3] < (INST-OF NUMBER)
     [ps-en4] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (WORKAROUND-OF (INST-OF WORKAROUND-PLAN))))
     [ps-en4]   (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (SET-OF (INST-OF WORKAROUND-STEP))))
     [ps-en4] < (SET-OF (INST-OF NUMBER))
      [ps-en5] > (WORKAROUND-OF (INST-OF WORKAROUND-PLAN))
      [ps-en5] < (SET-OF (INST-OF WORKAROUND-STEP))
       -[ps-an6: RETRIEVE-R] > (WORKAROUND-OF (INST-OF WORKAROUND-PLAN))
        [ps-an6: RETRIEVE-R] < (SET-OF (INST-OF WORKAROUND-STEP))
      -[ps-an8: SET] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (SET-OF (INST-OF WORKAROUND-STEP))))
       [ps-an8: SET]   (APPEND (SET-OF (INST-OF NUMBER)))
       [ps-an8: SET] < (SET-OF (INST-OF NUMBER))
       [ps-en9] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF WORKAROUND-STEP)))
       [ps-en9] < (SET-OF (INST-OF NUMBER))
        -[ps-an12: COVERING] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF WORKAROUND-STEP)))
         [ps-an12: COVERING]   (APPEND (INST-OF NUMBER) (INST-OF NUMBER))
         [ps-an12: COVERING] < (SET-OF (INST-OF NUMBER))
         [ps-en13] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF EMPLACE-AVLB)))
         [ps-en13] < (INST-OF NUMBER)
          -[ps-an15: METHOD] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF EMPLACE-AVLB)))
           [ps-an15: METHOD] < (INST-OF NUMBER)
           [ps-en16] > (FIND (OBJ (SPEC-OF MAXIMUM)) (OF (FIND (OBJ (SPEC-OF TIME)) (OF (BRIDGE-OF (INST-OF EMPLACE-AVLB))))))
           [ps-en16]   (FIND (OBJ (SPEC-OF MAXIMUM)) (OF (SET-OF (INST-OF NUMBER))))
           [ps-en16] < (INST-OF NUMBER)
            [ps-en17] > (FIND (OBJ (SPEC-OF TIME)) (OF (BRIDGE-OF (INST-OF EMPLACE-AVLB))))
            [ps-en17]   (FIND (OBJ (SPEC-OF TIME)) (OF (SET-OF (INST-OF AVLB))))
            [ps-en17] < (SET-OF (INST-OF NUMBER))
             [ps-en18] > (BRIDGE-OF (INST-OF EMPLACE-AVLB))
             [ps-en18] < (SET-OF (INST-OF AVLB))
              -[ps-an19: RETRIEVE-R] > (BRIDGE-OF (INST-OF EMPLACE-AVLB))
               [ps-an19: RETRIEVE-R] < (SET-OF (INST-OF AVLB))
             -[ps-an21: SET] > (FIND (OBJ (SPEC-OF TIME)) (OF (SET-OF (INST-OF AVLB))))
              [ps-an21: SET]   (APPEND (INST-OF NUMBER))
              [ps-an21: SET] < (SET-OF (INST-OF NUMBER))
              [ps-en22] > (FIND (OBJ (SPEC-OF TIME)) (OF (INST-OF AVLB)))
              [ps-en22] < (INST-OF NUMBER)
               -[ps-an23: METHOD] > (FIND (OBJ (SPEC-OF TIME)) (OF (INST-OF AVLB)))
                [ps-an23: METHOD] < (INST-OF NUMBER)
                [ps-en24] > (IF (IS-LESS-OR-EQUAL (OBJ (EMPLACEMENT-TIME (INST-OF AVLB))) (THAN 0.5)) THEN 0.5 ELSE (EMPLACEMENT-TIME (INST-OF AVLB)))
                [ps-en24]   (IF (INST-OF BOOLEAN) THEN 0.5 ELSE (INST-OF NUMBER))
                [ps-en24] < (INST-OF NUMBER)
                 [ps-en25] > (EMPLACEMENT-TIME (INST-OF AVLB))
                 [ps-en25] < (INST-OF NUMBER)
                  -[ps-an27: RETRIEVE-R] > (EMPLACEMENT-TIME (INST-OF AVLB))
                   [ps-an27: RETRIEVE-R] < (INST-OF NUMBER)
                 [ps-en26] > (IS-LESS-OR-EQUAL (OBJ (EMPLACEMENT-TIME (INST-OF AVLB))) (THAN 0.5))
                 [ps-en26]   (IS-LESS-OR-EQUAL (OBJ (INST-OF NUMBER)) (THAN 0.5))
                 [ps-en26] < (INST-OF BOOLEAN)
                  [ps-en25] > (EMPLACEMENT-TIME (INST-OF AVLB))
                  [ps-en25] < (INST-OF NUMBER)
                   -[ps-an27: RETRIEVE-R] > (EMPLACEMENT-TIME (INST-OF AVLB))
                    [ps-an27: RETRIEVE-R] < (INST-OF NUMBER)
                  -[ps-an28: METHOD] > (IS-LESS-OR-EQUAL (OBJ (INST-OF NUMBER)) (THAN 0.5))
                   [ps-an28: METHOD] < (INST-OF BOOLEAN)
             X[ps-an20: METHOD] > (FIND (OBJ (SPEC-OF TIME)) (OF (SET-OF (INST-OF AVLB))))
              [ps-an20: METHOD]   *** NO METHOD FOUND ***
              [ps-an20: METHOD] < NIL
            -[ps-an29: METHOD] > (FIND (OBJ (SPEC-OF MAXIMUM)) (OF (SET-OF (INST-OF NUMBER))))
             [ps-an29: METHOD] < (INST-OF NUMBER)
         [ps-en14] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF TANK-PLOW-MINEFIELD)))
         [ps-en14] < (INST-OF NUMBER)
          -[ps-an30: METHOD] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF TANK-PLOW-MINEFIELD)))
           [ps-an30: METHOD] < (INST-OF NUMBER)
           [ps-en31] > (MULTIPLY (OBJ (FIND (OBJ (SPEC-OF LENGTH)) (OF (MINEFIELD-OF (INST-OF TANK-PLOW-MINEFIELD))))) (BY 25/3))
           [ps-en31]   (MULTIPLY (OBJ (INST-OF NUMBER)) (BY 25/3))
           [ps-en31] < (INST-OF NUMBER)
            [ps-en32] > (FIND (OBJ (SPEC-OF LENGTH)) (OF (MINEFIELD-OF (INST-OF TANK-PLOW-MINEFIELD))))
            [ps-en32]   (FIND (OBJ (SPEC-OF LENGTH)) (OF (INST-OF MINEFIELD)))
            [ps-en32] < (INST-OF NUMBER)
             [ps-en33] > (MINEFIELD-OF (INST-OF TANK-PLOW-MINEFIELD))
             [ps-en33] < (INST-OF MINEFIELD)
              -[ps-an34: RETRIEVE-R] > (MINEFIELD-OF (INST-OF TANK-PLOW-MINEFIELD))
               [ps-an34: RETRIEVE-R] < (INST-OF MINEFIELD)
             -[ps-an35: METHOD] > (FIND (OBJ (SPEC-OF LENGTH)) (OF (INST-OF MINEFIELD)))
              [ps-an35: METHOD] < (INST-OF NUMBER)
              [ps-en36] > (LENGTH-OF (INST-OF MINEFIELD))
              [ps-en36] < (INST-OF NUMBER)
               -[ps-an37: RETRIEVE-R] > (LENGTH-OF (INST-OF MINEFIELD))
                [ps-an37: RETRIEVE-R] < (INST-OF NUMBER)
            -[ps-an38: METHOD] > (MULTIPLY (OBJ (INST-OF NUMBER)) (BY 25/3))
             [ps-an38: METHOD] < (INST-OF NUMBER)
        X[ps-an10: METHOD] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF WORKAROUND-STEP)))
         [ps-an10: METHOD]   *** NO METHOD FOUND ***
         [ps-an10: METHOD] < NIL
        X[ps-an11: SET] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (INST-OF WORKAROUND-STEP)))
         [ps-an11: SET] < NIL
      X[ps-an7: METHOD] > (ESTIMATE (OBJ (SPEC-OF TIME)) (FOR (SET-OF (INST-OF WORKAROUND-STEP))))
       [ps-an7: METHOD]   *** NO METHOD FOUND ***
       [ps-an7: METHOD] < NIL
     -[ps-an39: METHOD] > (ADD (OBJ (SET-OF (INST-OF NUMBER))))
      [ps-an39: METHOD] < (INST-OF NUMBER)

   at Thu Jun 10 10:26:48 PDT 1999

